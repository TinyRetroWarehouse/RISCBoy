Processor:
  ☐ Get float printf working @high
    Everything else I try seems to pass!
    There are some questionable things in the code, e.g. performing a 
    sh on some address, and an lw immediately afterward, which
    causes Xs to get written to register file. Definitely needs investigation.
  ☐ Look closely at riscv-formal to see if suitable
  ☐ Factor out decode to separate module
  ☐ Iterate on decode synths to try and pack gates down
  ☐ Identify other sources of high gate count
  ☐ Add exceptions
    ☐ CSR for unaligned info?
    ☐ Non-returning hardfault exception for e.g. exception during exception
  ☐ Consider adding debug
  ☐ Consider hardware unaligned load/store support
    (e.g. perform just byte accesses; just has to be better than software).
  ☐ Port more advanced/larger C testcases
  ☐ Investigate negedge read for register file to improve timing
  ☐ Support for M extension, potentially trap for divides
  ☐ Consider a generic extension interface which could also be used by M extension
  ☐ Add CSR support, with parameters to disable. @low
    Low priority. None of our software will care about CSRs,
    except perhaps for some nonstandard exception info.

Graphics:
  ☐ Set target gate count
  ☐ Set target features
  ☐ Consider memory writeback for compositing multiple layers
  ☐ Consider mode7-esque
  ☐ Consider pixel modes

DMA:
  ☐ Spec it!

Other Chip:
  ☐ Proper async SRAM controller
  ☐ Remove wait states from sync SRAM controller
  ☐ Support bursts in AHB-lite fabric
  ☐ More aggressive busfabric verification (UVM? Formal?)
  ☐ Support partial crossbars in ahbl_crossbar
  ☐ GPIO: multiple-pad peripheral inputs
    (not totally critical for this project)
  ☐ SD controller
    Can be a simple SPI, or more sophisticated e.g. some kind of XIP with cache,
    or manual paging into internal buffers which can then be random-accessed,
    or protocol-oriented but with FIFO interface rather than internal buffers
    (i.e. optimised for streaming into main memory)
  ☐ Audio
    Initially, some FIFOs and simple PWM.
    Can then add e.g. interpolator and improved modulation. Not critical.

PCB:
  ✔ FPGA config: check whether it's feasible for ATXMega32a4u to stream from SD card to FPGA slave config port (minimal part count) @done (18-11-23 00:43)
      Details: probably not. USB pins are shared with one of the SPIs,
      so one of the interfaces would be bitbashed. iCE40 configuration guide
      says the cfg slave needs to be clocked at 1...25 MHz "without interruption".
      Decided to use a different micro: SAML22G18A. This has USB, and also has sufficient
      program storage to hold the bitstream.
  ☐ Find example code for SAML22G18A USB-UART bridge
  ☐ Write simple block-oriented SD read/write code for Atmel and expose this over USB
  ☐ Hazard5 bootloader: load 2nd stage from SD card into memory and execute it
